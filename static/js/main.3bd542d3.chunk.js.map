{"version":3,"sources":["components/Input/Input.module.css","components/Form/Form.module.css","pages/Form/Form.module.css","hooks/useInput.js","utils/phoneMask.js","constants/constants.js","utils/getMaxDate.js","hooks/useValidate.js","utils/getValueUppercase.js","components/Input/Input.js","components/Form/Form.js","pages/Form/Form.js","reportWebVitals.js","index.js"],"names":["module","exports","useInput","initialValue","useState","value","setValue","onChange","target","id","phone","x","replace","match","phoneMask","REG_EXP_FIO","REG_EXP_EMAIL","LABELS","ERRORS","getMaxDate","today","Date","dd","getDate","mm","getMonth","yy","getFullYear","maxDate","useValidate","isValid","setIsValid","validate","fioValid","trim","split","map","item","toUpperCase","slice","join","getValueUppercase","firstDigitOfOperatorCode","telValid","length","emailValid","receivedStr","parse","maxStr","minStr","Input","type","handleChangeValue","maxLength","autoFocus","minDate","label","htmlFor","isCheck","isValueValid","error","className","styles","wrapper","input","active","fio","required","min","max","prompt","Form","handleClick","tel","email","date","dateValid","form","button","onClick","setIsCheck","isValidFields","main","notification","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bd542d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Input_wrapper__17czm\",\"input\":\"Input_input__1p5n3\",\"fio\":\"Input_fio__2osJC\",\"label\":\"Input_label__1NBgI\",\"active\":\"Input_active__3SJC0\",\"error\":\"Input_error__1BLOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3WH86\",\"button\":\"Form_button__TaSdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Form_main__1MQTp\",\"notification\":\"Form_notification__1aXnO\"};","import { useState } from 'react';\r\n\r\nimport { phoneMask } from '../utils/phoneMask';\r\n\r\nexport const useInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleChangeValue = ({target}) => {\r\n    const id = target.id;\r\n    let value = target.value;\r\n    \r\n    if (id === 'tel') {\r\n      setValue(phoneMask(value))\r\n    } else {\r\n      setValue(value)\r\n    }\r\n  };\r\n\r\n  return {\r\n    value,\r\n    onChange: handleChangeValue\r\n  };\r\n};","export const phoneMask = (phone) => {\r\n  const x = phone.replace(/\\D/g, '').match(/(\\d{0,1})(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})/);\r\n  phone = '+7' + (!x[3] ? x[2] : '(' + x[2] + ') ') + x[3] + (x[4] ? '-' + x[4] : '') + (x[5] ? '-' + x[5] : '');\r\n\r\n  return phone;\r\n}","export const REG_EXP_FIO = /^[А-ЯЁ][а-яё]*([-][А-ЯЁ][а-яё]*)*\\s[А-ЯЁ][а-яё]*([-][А-ЯЁ][а-яё]*)*\\s[А-ЯЁ][а-яё]*([-][А-ЯЁ][а-яё]*)*$/;\r\n\r\nexport const REG_EXP_EMAIL = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport const LABELS = {\r\n  FIO: 'ФИО',\r\n  TEL: 'Телефон',\r\n  EMAIL: 'Email',\r\n  DATE: 'Дата'\r\n};\r\n\r\nexport const ERRORS = {\r\n  FIO: 'Введите корректное имя.',\r\n  TEL: 'Введите корректный номер телефона.',\r\n  EMAIL: 'Введите корректную почту.',\r\n  DATE: 'Введите корректную дату.'\r\n};","export const getMaxDate = () => {\r\n  const today = new Date();\r\n\r\n  let dd = today.getDate();\r\n  if (dd < 10) dd = `0${ dd }`;\r\n\r\n  let mm = today.getMonth() + 1;\r\n  if (mm < 10) mm = `0${ mm }`;\r\n\r\n  let yy = today.getFullYear();\r\n  if (yy < 10) yy = `0${ yy }`;\r\n\r\n  return `${ yy }-${ mm }-${ dd }`\r\n}","import { useState } from 'react';\r\n\r\nimport { REG_EXP_FIO, REG_EXP_EMAIL } from '../constants/constants';\r\n\r\nimport { getMaxDate } from '../utils/getMaxDate';\r\nimport { getValueUppercase } from '../utils/getValueUppercase';\r\n\r\nconst maxDate = getMaxDate();\r\nconst minDate = '2010-01-01';\r\n\r\nexport const useValidate = (initialValue) => {\r\n  const [isValid, setIsValid] = useState(initialValue);\r\n\r\n  const validate = ({value}) => {\r\n    const valueFioUppercase = getValueUppercase(value);\r\n    const fioValid = valueFioUppercase.match(REG_EXP_FIO);\r\n\r\n    const firstDigitOfOperatorCode = value[3];\r\n    const telValid = firstDigitOfOperatorCode && firstDigitOfOperatorCode !== '1' && firstDigitOfOperatorCode !== '2' && firstDigitOfOperatorCode !== '7' && value.length === 17;\r\n\r\n    const emailValid = value.match(REG_EXP_EMAIL);\r\n\r\n    const receivedStr = Date.parse(value);\r\n    const maxStr = Date.parse(maxDate);\r\n    const minStr = Date.parse(minDate);\r\n    const dateValid = receivedStr >= minStr && receivedStr <= maxStr;\r\n\r\n    if (fioValid || telValid || emailValid || dateValid) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    isValid,\r\n    validate\r\n  }\r\n};","export const getValueUppercase = (value) => {\r\n  return value ? value.trim().split(' ').map(item => item[0].toUpperCase() + item.slice(1)).join(' ') : 'ret'\r\n};","import React from 'react';\r\n\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = ({\r\n  type,\r\n  id,\r\n  value,\r\n  handleChangeValue,\r\n  maxLength,\r\n  autoFocus,\r\n  minDate,\r\n  maxDate,\r\n  label,\r\n  htmlFor,\r\n  isCheck,\r\n  isValueValid,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className={ styles.wrapper }>\r\n      <input\r\n        className={\r\n          `${ styles.input }\r\n           ${ value !== '' ? styles.active : '' }\r\n           ${ id === 'fio' ? styles.fio : '' }`\r\n        }\r\n        type={ type }\r\n        id={ id }\r\n        value={ value }\r\n        onChange={ handleChangeValue }\r\n        required\r\n        maxLength={ maxLength }\r\n        autoFocus={ autoFocus }\r\n        min={ minDate }\r\n        max={ maxDate }\r\n      />\r\n      <label className={ styles.label } htmlFor={ htmlFor }>\r\n        { label }\r\n      </label>\r\n      <div className={ styles.prompt } />\r\n      {\r\n        isCheck && !isValueValid &&\r\n        <span className={ styles.error}>\r\n          { error }\r\n        </span>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport Input from '../Input/Input';\r\n\r\nimport { LABELS, ERRORS } from '../../constants/constants';\r\n\r\nimport { getMaxDate } from '../../utils/getMaxDate';\r\n\r\nimport styles from './Form.module.css';\r\n\r\nconst maxDate = getMaxDate();\r\nconst minDate = '2010-01-01';\r\n\r\nconst Form = ({\r\n  isCheck,\r\n  handleClick,\r\n  fio,\r\n  fioValid,\r\n  tel,\r\n  telValid,\r\n  email,\r\n  emailValid,\r\n  date,\r\n  dateValid\r\n}) => {\r\n  return (\r\n    <form className={ styles.form }>\r\n      <Input\r\n        type=\"text\"\r\n        id=\"fio\"\r\n        value={ fio.value }\r\n        handleChangeValue={ fio.onChange }\r\n        maxLength=\"50\"\r\n        autoFocus\r\n        isCheck={ isCheck }\r\n        isValueValid={ fioValid.isValid }\r\n        label={LABELS.FIO}\r\n        htmlFor=\"fio\"\r\n        error={ERRORS.FIO}\r\n      />\r\n      <Input\r\n        type=\"tel\"\r\n        id=\"tel\"\r\n        value={ tel.value }\r\n        handleChangeValue={ tel.onChange }\r\n        isCheck={ isCheck }\r\n        isValueValid={ telValid.isValid }\r\n        label={LABELS.TEL}\r\n        htmlFor=\"tel\"\r\n        error={ERRORS.TEL}\r\n      />\r\n      <Input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        value={ email.value }\r\n        handleChangeValue={ email.onChange }\r\n        maxLength=\"30\"\r\n        isCheck={ isCheck }\r\n        isValueValid={ emailValid.isValid }\r\n        label={LABELS.EMAIL}\r\n        htmlFor=\"email\"\r\n        error={ERRORS.EMAIL}\r\n      />\r\n      <Input\r\n        type=\"date\"\r\n        minDate={ minDate }\r\n        maxDate={ maxDate }\r\n        id=\"date\"\r\n        value={ date.value }\r\n        handleChangeValue={ date.onChange }\r\n        isCheck={ isCheck }\r\n        isValueValid={ dateValid.isValid }\r\n        label={LABELS.DATE}\r\n        htmlFor=\"date\"\r\n        error={ERRORS.DATE}\r\n      />\r\n      <button\r\n        className={ styles.button }\r\n        type=\"button\"\r\n        onClick={ handleClick }\r\n      >\r\n        Продолжить\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\n\r\nimport { useInput } from '../../hooks/useInput';\r\nimport { useValidate } from '../../hooks/useValidate';\r\n\r\nimport FormFields from '../../components/Form/Form';\r\n\r\nimport styles from './Form.module.css';\r\n\r\nconst Form = () => {\r\n  const [isCheck, setIsCheck] = useState(false);\r\n\r\n  const fio = useInput(\"\");\r\n  const tel = useInput(\"\");\r\n  const email = useInput(\"\");\r\n  const date = useInput(\"\");\r\n\r\n  const fioValid = useValidate(false);\r\n  const telValid = useValidate(false);\r\n  const emailValid = useValidate(false);\r\n  const dateValid = useValidate(false);\r\n\r\n  const handleClick = () => {\r\n    setIsCheck(true);\r\n\r\n    fioValid.validate(fio);\r\n    telValid.validate(tel);\r\n    emailValid.validate(email);\r\n    dateValid.validate(date);\r\n  };\r\n  \r\n  const isValidFields = fioValid.isValid && telValid.isValid && emailValid.isValid && dateValid.isValid;\r\n\r\n  return (\r\n    <main className={ styles.main }>\r\n      <FormFields\r\n        isCheck={isCheck}\r\n        handleClick={handleClick}\r\n        fio={fio}\r\n        tel={tel}\r\n        email={email}\r\n        date={date}\r\n        fioValid={fioValid}\r\n        telValid={telValid}\r\n        emailValid={emailValid}\r\n        dateValid={dateValid}\r\n      />\r\n      {\r\n        isValidFields &&\r\n        <div className={ styles.notification }>Форма заполнена корректно.</div>\r\n      }\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './constants/colors.css'\r\nimport './index.css';\r\nimport Form from './pages/Form/Form';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Form />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}